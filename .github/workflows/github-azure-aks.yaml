name: Deploy to AKS

on:
  push:
    branches:
      - main
env:
  ACR_NAME: acrdotnetapp # Replace with your ACR name
  IMAGE_NAME: dotnetapp # Replace with your desired image name
  IMAGE: gcpsantanubhunia/dotnetapp:v12

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }} # Or configure OIDC
     
      - name: Build and Tag Docker image
        run: |
          docker build -t ${{ env.ACR_NAME }}.azurecr.io/${{ env.IMAGE_NAME }}:latest .

      - name: Push Docker image to ACR
        run: |
          docker push ${{ env.ACR_NAME }}.azurecr.io/${{ env.IMAGE_NAME }}:latest

      # - name: Build and push Docker image
      #   uses: docker/build-push-action@v5
      #   with:
      #     context: .
      #     push: true
      #     tags: acrdotnetapp.azurecr.io/dotnetapp:latest
      #     file: ./Dockerfile

      # - name: Build and push Docker image
      #   uses: docker/build-push-action@v5
      #   with:
      #     context: .
      #     file: ./Dockerfile
      #     push: true
      #     tags: youracrname.azurecr.io/your-image-name:latest
      # - name: Log in to Docker Hub
      #   uses: docker/login-action@v3
      #   with:
      #     username: ${{ secrets.DOCKER_USERNAME }}
      #     password: ${{ secrets.DOCKER_PASSWORD }}

      # - name: Build and push Docker image
      #   uses: docker/build-push-action@v5
      #   with:
      #     context: .
      #     push: true
      #     tags: ${{ env.IMAGE }}

      # - name: Update image tag in deployment YAML 
      #   run: |    
      #     yq e '.spec.template.spec.containers[0].image = "${{ env.IMAGE }}"' -i deployment.yaml

      # - name: Set AKS context
      #   uses: azure/aks-set-context@v3
      #   with:
      #     resource-group: dotnetappRG
      #     cluster-name: dotnetappakscluster

      # - name: Deploy to AKS
      #   uses: azure/k8s-deploy@v4
      #   with:
      #     action: deploy
      #     manifests: |
      #       deployment.yaml
      #       service.yaml
      #     images: ${{ env.IMAGE }}